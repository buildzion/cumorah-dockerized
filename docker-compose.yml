
services:
  web:
    image: "${CUMORAH_IMAGE:-ghcr.io/buildzion/cumorah}:${CUMORAH_TAG:-main}"
#    ports:
#      - "${LISTEN_PORT:-8000}:8000"
    environment:
      PYTHONPATH: "/host/python"
      DOCKER_TEMPLATE_DIR: "/host/templates"
      DOCKER_MEDIA_ROOT: "/host/media"
      DJANGO_SETTINGS_MODULE: "${DJANGO_SETTINGS_MODULE:-cumorah.settings.production}"
      PYTHONUNBUFFERED: "1"
      DATABASE_URL: "${DATABASE_URL:-postgres://cumorah:cumorah@postgres/cumorah}"
    volumes:
      - ./dockerdata/python:/host/python
      - ./dockerdata/templates:/host/templates
      - ./dockerdata/media:/host/media
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.cumorah.rule=Host(`${CUMORAH_HOSTNAME}`)"
#      - "traefik.http.routers.cumorah.entrypoints=websecure"
#      - "traefik.http.routers.cumorah.tls.certresolver=myresolver"
    depends_on:
      - postgres

  postgres:
    image: postgres:16-bookworm
    environment:
      POSTGRES_DB: cumorah
      POSTGRES_USER: cumorah
      POSTGRES_PASSWORD: cumorah
    volumes:
      - ./dockerdata/postgres:/var/lib/postgresql/data

  nginx:
    image: nginx:1.27-bookworm
#    ports:
#      - "${MEDIA_LISTEN_PORT:-8001}:80"
    volumes:
      - ./dockerdata/media:/usr/share/nginx/html/media
      - ./config/nginx-conf.d:/etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.media.rule=Host(`${CUMORAH_HOSTNAME}`)"
      - "traefik.http.routers.media.entrypoints=websecure"
      - "traefik.http.routers.media.tls.certresolver=myresolver"


  proxy:
    image: traefik:v3.1
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL:-INFO}"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
#      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${HTTP_LISTEN_PORT:-80}:80"
      - "${HTTPS_LISTEN_PORT:-443}:443"
    volumes:
      - ./dockerdata/letsencrypt:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - web
      - staticmedia
